&НаКлиенте
Процедура ПериодВперед(Команда)
	
	ТекПериод = НачалоМесяца(ДобавитьМесяц(ТекПериод, 1));
	ОбновитьДанные();
	РаскрытьВетвиДерева();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодНазад(Команда)
	
	ТекПериод = НачалоМесяца(ДобавитьМесяц(ТекПериод, -1));
	ОбновитьДанные();
	РаскрытьВетвиДерева();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ТекПериод = НачалоМесяца(ТекущаяДата());
	ОбновитьДанные();
	РаскрытьВетвиДерева();
	ОбновитьПоказателиНаФорме();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанные()
	
	ВалютаУчета = Константы.ОсновнаяВалютаУчета.Получить();
	Если ВалютаУчета <> Справочники.Валюты.ПустаяСсылка() Тогда
		ВалютаУчетаСтр = ВалютаУчета.КраткоеНаименование;
	КонецЕсли; 
	
	ДеревоСтатей = ЗапросПоСтатьямНаСервере();	
	
	Объект.ТабЧасть.Очистить();
	ДОбъект = РеквизитФормыВЗначение("Объект");
	ДеревоВТаблицу(ДОбъект, ДеревоСтатей, "ТабЧасть");
	ЗначениеВРеквизитФормы(ДОбъект, "Объект");
	
	ПересчитатьДанныеПоГруппамТабЧасти();
	
	КомандаТаблицуВДеревоНаСервере();
	ОбновитьПоказателиНаФорме();
		
КонецПроцедуры
 
&НаСервере
Функция ЗапросПоСтатьямНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиРасходов.Ссылка КАК Статья,
		|	ВЫБОР
		|		КОГДА СтатьиРасходов.ЭтоГруппа
		|			ТОГДА ""Группа""
		|		ИНАЧЕ ""Элемент""
		|	КОНЕЦ КАК ТипГ
		|ПОМЕСТИТЬ врСтатьи
		|ИЗ
		|	Справочник.СтатьиРасходов КАК СтатьиРасходов
		|ГДЕ
		|	СтатьиРасходов.Активна
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	врСтатьи.Статья КАК Статья,
		|	ВЫБОР
		|		КОГДА ПланРасходов.Период МЕЖДУ &НачДатаЗапроса И &КонДатаЗапроса
		|			ТОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(ПланРасходов.Сумма, 0) = 0
		|						ТОГДА 0
		|					ИНАЧЕ ПланРасходов.Сумма
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаПлан,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДвижениеДенегПоСчетамОбороты.СуммаОборот, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ ДвижениеДенегПоСчетамОбороты.СуммаОборот * -1
		|	КОНЕЦ КАК СуммаФакт,
		|	ВЫБОР
		|		КОГДА ПланРасходов.Период МЕЖДУ &НачДатаЗапроса И &КонДатаЗапроса
		|			ТОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(ПланРасходов.Сумма, 0) = 0
		|						ТОГДА 0
		|					ИНАЧЕ ПланРасходов.Сумма
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ - ВЫБОР
		|		КОГДА ЕСТЬNULL(ДвижениеДенегПоСчетамОбороты.СуммаОборот, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ ДвижениеДенегПоСчетамОбороты.СуммаОборот * -1
		|	КОНЕЦ КАК Доступно,
		|	врСтатьи.ТипГ КАК ТипГ
		|ИЗ
		|	врСтатьи КАК врСтатьи
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПланРасходов КАК ПланРасходов
		|		ПО врСтатьи.Статья.Ссылка = ПланРасходов.Статья
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеДенегПоСчетам.Обороты(&НачДатаЗапроса, &КонДатаЗапроса, Период, ) КАК ДвижениеДенегПоСчетамОбороты
		|		ПО врСтатьи.Статья.Ссылка = ДвижениеДенегПоСчетамОбороты.Статья
		|ИТОГИ ПО
		|	Статья ТОЛЬКО ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("КонДатаЗапроса", КонецМесяца(ТекПериод));
	Запрос.УстановитьПараметр("НачДатаЗапроса", НачалоМесяца(ТекПериод));
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Возврат РезультатЗапроса;
	
КонецФункции

&НаКлиенте
Процедура РаскрытьВетвиДерева()
	
	ЭлементыДерева = ДеревоЗначений.ПолучитьЭлементы();
    Для каждого ЭлементДерева Из ЭлементыДерева Цикл
        Элементы.ДеревоЗначений.Развернуть(ЭлементДерева.ПолучитьИдентификатор());
    КонецЦикла;
		
КонецПроцедуры

//источник: https://helpf.pro/faq83/view/1588.html
&НаСервере
Процедура КомандаДеревоВТаблицуНаСервере(ДЗ = Неопределено)
	
	Объект.ТабЧасть.Очистить();
	ДОбъект = РеквизитФормыВЗначение("Объект");
	Если ДЗ = Неопределено Тогда
		ДеревоВТаблицу(ДОбъект, РеквизитФормыВЗначение("ДеревоЗначений"), "ТабЧасть");
	Иначе	
		ДеревоВТаблицу(ДОбъект, ДЗ, "ТабЧасть");
	КонецЕсли; 
	ЗначениеВРеквизитФормы(ДОбъект, "Объект");
	
КонецПроцедуры 

&НаСервере
Процедура КомандаТаблицуВДеревоНаСервере()
	
	Дерево = ТаблицаВДерево(РеквизитФормыВЗначение("Объект"), "ТабЧасть"); //ТабЧасть - имя табличной части
	ЗначениеВРеквизитФормы(Дерево, "ДеревоЗначений");//ДеревоЗначений - реквизит формы с типом дерево значений
	Элементы.ДеревоЗначений.Обновить();
		
КонецПроцедуры

//ФОРМИРОВАНИЕ ТАБЛИЦЫ ИЗ ДЕРЕВА
&НаСервере
Процедура ДеревоВТаблицу(ДокОбъект, ДеревоЗначений, НаименованиеТабличнойЧастиДокумента, СтрокаДерева = NULL, КлючСвязи = NULL) Экспорт
	Если СтрокаДерева = NULL И КлючСвязи = NULL Тогда
		//ПЕРВЫЙ ВЫЗОВ ПРОЦЕДУРЫ (КОРНЕВЫЕ ЭЛЕМЕНТЫ)
		ПервыйВызов = Истина;
		ДокОбъект[НаименованиеТабличнойЧастиДокумента].Очистить();
		ИсточникВыборки = ДеревоЗначений.Строки;
		КлючСвязи = 0; // ЭЛЕМЕНТ ВЕРХНЕГО УРОВНЯ ИМЕЕТ НОМЕР СТРОКИ РОДИТЕЛЯ 0 (ОБЯЗАТЕЛЬНЫЙ РЕКВИЗИТ)
	Иначе
		//ВНУТРЕННИЙ ВЫЗОВ ПРОЦЕДУРЫ (ПОДЧИНЕННЫЕ ЭЛЕМЕНТЫ)
		ПервыйВызов = Ложь;
		ИсточникВыборки = СтрокаДерева.Строки;
	КонецЕсли;
	Для каждого Стр из ИсточникВыборки Цикл
		НС = ДокОбъект[НаименованиеТабличнойЧастиДокумента].Добавить();
		Для каждого Кол из ДокОбъект.Метаданные().ТабличныеЧасти[НаименованиеТабличнойЧастиДокумента].Реквизиты Цикл
			Если Кол.Имя = "КлючСвязи" Тогда
				НС.КлючСвязи = КлючСвязи
			ИначеЕсли Кол.Имя = "НомерСтроки" Тогда
				Продолжить;
			Иначе 
				НС[Кол.Имя] = Стр[Кол.Имя];
			КонецЕсли;
		КонецЦикла;
		Если НЕ Стр.Строки.Количество() = 0 Тогда
			ДеревоВТаблицу(ДокОбъект,,НаименованиеТабличнойЧастиДокумента, Стр, НС.НомерСтроки);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 

//ФОРМИРОВАНИЕ ДЕРЕВА ИЗ ТАБЛИЦЫ
&НаСервере
Функция ТаблицаВДерево(ДокОбъект, НаименованиеТабличнойЧастиДокумента, КлючСвязи = NULL, ЭлементРодитель = NULL) Экспорт	
	//ПОДГОТОВКА КОЛОНОК ДЕРЕВА
	КолонкиТаблицы = ДокОбъект.Метаданные().ТабличныеЧасти[НаименованиеТабличнойЧастиДокумента].Реквизиты;
	ДеревоЗначений2 = Новый ДеревоЗначений;
	Для каждого Кол из КолонкиТаблицы Цикл
		Если Кол.Имя = "НомерСтроки" ИЛИ Кол.Имя = "КлючСвязи" Тогда
			Продолжить;
		Иначе
			ДеревоЗначений2.Колонки.Добавить(Кол.Имя, Новый ОписаниеТипов(Кол.Тип));
		КонецЕсли;
	КонецЦикла;//ДеревоЗначений.Строки.Очистить();
	
	Если КлючСвязи = NULL И ЭлементРодитель = NULL Тогда
		//ПЕРВЫЙ ВЫЗОВ ПРОЦЕДУРЫ (КОРНЕВЫЕ ЭЛЕМЕНТЫ)
		ИсточникВыборки = ДеревоЗначений2.Строки;
		КлючСвязи = 0; // ЭЛЕМЕНТ ВЕРХНЕГО УРОВНЯ ИМЕЕТ НОМЕР СТРОКИ РОДИТЕЛЯ 0 (ОБЯЗАТЕЛЬНЫЙ РЕКВИЗИТ)
	Иначе
		//ВНУТРЕННИЙ ВЫЗОВ ПРОЦЕДУРЫ (ПОДЧИНЕННЫЕ ЭЛЕМЕНТЫ)
		ИсточникВыборки = ЭлементРодитель.Строки;
	КонецЕсли;
	Фильтр = Новый Структура("КлючСвязи", КлючСвязи);
	М = ДокОбъект[НаименованиеТабличнойЧастиДокумента].НайтиСтроки(Фильтр);
	Если М.Количество() = 0 Тогда
		Возврат ДеревоЗначений2;
	КонецЕсли;
	Для каждого Стр из М Цикл
		Элемент = ИсточникВыборки.Добавить();
		Для каждого Кол из КолонкиТаблицы Цикл
			Если Кол.Имя = "НомерСтроки" ИЛИ Кол.Имя = "КлючСвязи" Тогда
				Продолжить;
			Иначе
				Элемент[Кол.Имя] = Стр[Кол.Имя];
			КонецЕсли;
		КонецЦикла;
		ТаблицаВДерево(ДокОбъект, НаименованиеТабличнойЧастиДокумента, Стр.НомерСтроки, Элемент); //ДОБАВЛЕНИЕ ПОДЧИНЁННЫХ ЭЛЕМЕНТОВ В ДЕРЕВО
	КонецЦикла;
	Возврат ДеревоЗначений2;
КонецФункции

///////////////////////////////////////////////////

&НаКлиенте
Процедура ДеревоЗначенийПриИзменении(Элемент)
	
	КомандаДеревоВТаблицуНаСервере();
	
	ПересчитатьДанныеПоГруппамТабЧасти();
	
	КомандаТаблицуВДеревоНаСервере();
	РаскрытьВетвиДерева();
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьДанныеПоГруппамТабЧасти()
	
	Перем НайденныеСтроки, Стр, СтрТаб;
	
	Для каждого СтрТаб Из Объект.ТабЧасть Цикл
		
		Если СтрТаб.ТипГ <> "Элемент" Тогда
			СтрТаб.СуммаПлан = 0;
			НайденныеСтроки = Объект.ТабЧасть.НайтиСтроки(Новый Структура("КлючСвязи", СтрТаб.НомерСтроки));	
			Для каждого Стр Из НайденныеСтроки Цикл
				СтрТаб.СуммаПлан = СтрТаб.СуммаПлан + Стр.СуммаПлан;
			КонецЦикла; 
		Иначе //запишем в регистр обновленные данные	
			ОбновитьПлановыеПоказатели(СтрТаб.Статья, СтрТаб.СуммаПлан);
		КонецЕсли; 	
		СтрТаб.Доступно = СтрТаб.СуммаПлан - СтрТаб.СуммаФакт;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ОбновитьПлановыеПоказатели(Ст, Сум)
	
	Если НЕ Ст.ЭтоГруппа Тогда
		мз = РегистрыСведений.ПланРасходов.СоздатьМенеджерЗаписи();
		мз.Период = ТекПериод;
		мз.Статья = Ст;
		мз.Сумма  = Сум;
		мз.Записать();
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ДеревоЗначенийПриАктивизацииСтроки(Элемент)
	
	ТекСтатья = Элемент.ТекущиеДанные.Статья;
	ОбновитьПоказателиНаФорме();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПоказателиНаФорме()

	ВсегоРаспределено = Финансы.ВсегоРаспределено(, ТекПериод);
	ДоходовКРаспределению = Формат(Финансы.СуммаДоходовКРаспределению(КонецМесяца(ТекПериод)) - ВсегоРаспределено, "ЧЦ=15; ЧДЦ=2; ЧН=-") +
							" " + ВалютаУчетаСтр;
	
	НачОстатокПоСтатье = 0;
	РаспределеноПоСтатье = Финансы.ВсегоРаспределено(ТекСтатья, ТекПериод);
	ВсегоПоСтатье = НачОстатокПоСтатье + РаспределеноПоСтатье;

КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьДанные();
	РаскрытьВетвиДерева();
	ОбновитьПоказателиНаФорме();
	
КонецПроцедуры
